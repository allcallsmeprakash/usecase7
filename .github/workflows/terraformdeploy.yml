name: Terraform

on:
  workflow_dispatch:
  # Uncomment below to enable automatic runs on push or PR to main
  # push:
  #   branches:
  #     - main
  # pull_request:
  #   branches:
  #     - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform -chdir=terraform/environments/dev init

      - name: Terraform Format
        run: terraform -chdir=terraform/environments/dev fmt

      - name: Terraform Validate
        run: terraform -chdir=terraform/environments/dev validate

      - name: Get Latest Image Digest from ECR
        id: ecr
        run: |
          IMAGE_DIGEST=$(aws ecr describe-images \
            --repository-name hello-world \
            --query 'sort_by(imageDetails,&imagePushedAt)[-1].imageDigest' \
            --output text)

          if [ -z "$IMAGE_DIGEST" ]; then
            echo "No image digest found. Make sure the image is pushed to ECR."
            exit 1
          fi

          IMAGE_URI="082041771564.dkr.ecr.us-east-1.amazonaws.com/hello-lambda@${IMAGE_DIGEST}"
          echo "image_uri=$IMAGE_URI" >> $GITHUB_OUTPUT

      - name: Terraform Plan (with image_uri)
        run: terraform -chdir=terraform/environments/dev plan -var="image_uri=${{ steps.ecr.outputs.image_uri }}"

      - name: Terraform Apply (with image_uri)
        if: github.ref == 'refs/heads/main'
        run: terraform -chdir=terraform/environments/dev apply -auto-approve -var="image_uri=${{ steps.ecr.outputs.image_uri }}"
